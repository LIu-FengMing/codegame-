/* 3星:97個動作包含97個動作以內  
   2星:100個動作包含100個動作以內97個動作以上  
   1星:滿足過關條件即可*/ 


#include <stdio.h>
#include <stdlib.h>
#include <string.h>
int main(int argc, char *argv[])
{
int i,length,j=1,index=1;
int carry=0;
int x[SIZE]={0};
int y[SIZE]={0};
int bit[SIZE]={0};
char str[SIZE];
getString(str);
length=strlen(str);
step();
turnRight();
step();
turnLeft();
step();
becameShip();
turnRight();
step();
turnLeft();
step();
becameCar();
step();
becameTank();
turnLeft();
fire();
step();
becameCar();
step();
turnLeft();
step();
turnRight();
for(i=0;i<2;i++){
 step();
}
turnLeft();
for(i=0;i<3;i++){
 step();
}
turnRight();
turnRight();
for(i=0;i<3;i++){
 step();
}
turnRight();
for(i=0;i<2;i++){
 step();
}
turnLeft();
step();
turnLeft();
turnLeft();
step();
turnRight();
for(i=0;i<2;i++){
 step();
}
turnLeft();
for(i=0;i<3;i++){
 step();
}
turnRight();
for(i=0;i<2;i++){
 step();
}
turnRight();
step();
turnLeft();
for(i=0;i<2;i++){
 step();
}
turnLeft();
fire();
step();
turnRight();
for(i=0;i<3;i++){
step();
}
turnRight();
for(i=0;i<4;i++){
 step();
}
becameTank();
turnRight();
for(i=0;i<2;i++){
 step();
}
turnLeft();
step();
turnRight();
step();
becameCar();
step();
becameShip();
turnLeft();
step();
becameCar();
turnRight();
fire();
for(i=0;i<3;i++){
 step();
}
becameShip();
step();
becameTank();
turnLeft();
step();
turnRight();
step();
becameCar();
step();
becameTank();
turnLeft();
step();
becameShip();
step();
becameCar();
step();
becameShip();
turnLeft();
fire();
step();
becameCar();
step();
turnRight();
step();
becameTank();
turnLeft();
step();
becameCar();
step();
becameTank();
step();
turnLeft();
fire();
for(i=0;i<2;i++){
 step();
}
turnRight();
step();
becameCar();
for(i=0;i<2;i++){
 step();
}
becameTank();
turnLeft();
step();
becameCar();
step();
becameTank();
turnRight();
step();
becameCar();
step();
becameShip();
turnRight();
for(i=0;i<3;i++){
 step();
}
becameCar();
turnRight();
for(i=length-1;i>=0;i--){
 if(index==1){
   if(str[i]!=' '){
 if(str[i]>='0'&&str[i]<='9'){
 	x[length-1-i]=str[i]-'0';
 }
}else{
 index=i;
}
}else{
 y[index-i-1]=str[i]-'0';
}
}
j=0;
for(i=0;i<SIZE;i++){
 bit[i]=x[i]+y[i]+carry;
 carry=0;
 if(bit[i]>=10){
   bit[i]-=10;
   carry=1;
}
}
j=1;
for(i=SIZE-1;i>=0;i--){
 if(bit[i]!=0&&j==1){
  j=0;
  printf("%d",bit[i]);
}else if(bit[i]==0&&j==1){
 continue;
}else if(j==0){
 printf("%d",bit[i]);
}
}
step();
turnLeft();
step();

	return 0;
 }


